FROM --platform=$BUILDPLATFORM rust:1.80.1-slim-bullseye AS builder
ARG TARGETOS
ARG TARGETARCH
WORKDIR /app
COPY . .

RUN apt-get update && apt-get install -y pkg-config libssl-dev git

RUN cargo update

RUN if [ "${TARGETARCH}" = "amd64" ]; then \
        rustup target add x86_64-unknown-linux-gnu; \
        export TARGET_TRIPLE=x86_64-unknown-linux-gnu; \
    elif [ "${TARGETARCH}" = "arm64" ]; then \
        rustup target add aarch64-unknown-linux-musl; \
        export TARGET_TRIPLE=aarch64-unknown-linux-musl; \
    fi && \
    cargo build --release --target ${TARGET_TRIPLE} && \
    cp /app/target/${TARGET_TRIPLE}/release/rust_boot /app/target/rust_boot

FROM debian:bullseye-slim
RUN apt-get update && apt-get install -y \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*
RUN useradd -m app
WORKDIR /home/app

# Copy the compiled binary using the target triple
COPY --from=builder /app/target/rust_boot /bin

COPY --from=builder /app/.kube .kube
COPY --from=builder /app/.env .env
RUN chown -R app:app /home/app
USER app

CMD ["/bin/rust_boot"]


# docker buildx build --platform linux/amd64 -t rust-app -f container/Dockerfile.multi  --load .